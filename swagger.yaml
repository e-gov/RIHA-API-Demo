---
swagger: "2.0"
info:
  description: "RIHA-Browser API documentation"
  version: "1.0"
  title: "RIHA-Browser API"
  license:
    name: "MIT"
basePath: "/"
tags:
- name: "Environment configuration"
- name: "File resources"
- name: "Information systems"
- name: "Issue events"
- name: "Issue timeline"
- name: "Issues"
- name: "Users"
schemes:
- "http"
paths:
  /api/v1/environment:
    get:
      tags:
      - "Environment configuration"
      summary: "Retrieve environment"
      description: ""
      operationId: "environment"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /api/v1/environment/organization:
    put:
      tags:
      - "Environment configuration"
      summary: "Change active organization of the current user"
      description: ""
      operationId: "changeActiveOrganization"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
      deprecated: true
  /api/v1/files:
    post:
      tags:
      - "File resources"
      summary: "Upload file"
      description: ""
      operationId: "upload"
      parameters:
      - name: "file"
        in: "query"
        required: true
        type: "ref"
      responses:
        default:
          description: "successful operation"
  /api/v1/issues/{issueId}:
    get:
      tags:
      - "Issues"
      summary: "Get single information system issue"
      description: ""
      operationId: "getInfoSystemIssue"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Issue"
    put:
      tags:
      - "Issues"
      summary: "Update issue"
      description: ""
      operationId: "updateStatus"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/Issue"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Issue"
  /api/v1/issues/{issueId}/comments:
    get:
      tags:
      - "Issue events"
      summary: "List all issue comments"
      description: ""
      operationId: "listIssueComments"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "page"
        in: "query"
        description: "page number"
        required: false
        type: "integer"
      - name: "size"
        in: "query"
        description: "page size"
        required: false
        type: "integer"
      - name: "filter"
        in: "query"
        description: "filter options"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "sorting options"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "field list"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PagedResponseIssueComment"
    post:
      tags:
      - "Issue events"
      summary: "Create new issue comment"
      description: ""
      operationId: "createIssueComment"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/IssueComment"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IssueComment"
  /api/v1/issues/{issueId}/comments/{commentId}:
    get:
      tags:
      - "Issue events"
      summary: "Get single issue comment"
      description: ""
      operationId: "getIssueComment"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "commentId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/IssueComment"
  /api/v1/issues/{issueId}/timeline:
    get:
      tags:
      - "Issue timeline"
      summary: "Get issue timeline"
      description: ""
      operationId: "getTimeline"
      parameters:
      - name: "issueId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "page"
        in: "query"
        description: "page number"
        required: false
        type: "integer"
      - name: "size"
        in: "query"
        description: "page size"
        required: false
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PagedResponseIssueEntity"
  /api/v1/systems:
    get:
      tags:
      - "Information systems"
      summary: "List all existing information systems"
      description: ""
      operationId: "list"
      parameters:
      - name: "page"
        in: "query"
        description: "page number"
        required: false
        type: "integer"
      - name: "size"
        in: "query"
        description: "page size"
        required: false
        type: "integer"
      - name: "filter"
        in: "query"
        description: "filter options"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "sorting options"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "field list"
        required: false
        type: "string"
      responses:
        default:
          description: "successful operation"
    post:
      tags:
      - "Information systems"
      summary: "Create new information system"
      description: ""
      operationId: "create"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InfoSystemModel"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InfoSystemModel"
  /api/v1/systems/{shortName}:
    get:
      tags:
      - "Information systems"
      summary: "Get existing information system"
      description: ""
      operationId: "get"
      parameters:
      - name: "shortName"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InfoSystemModel"
    put:
      tags:
      - "Information systems"
      summary: "Update existing information system"
      description: ""
      operationId: "update"
      parameters:
      - name: "shortName"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/InfoSystemModel"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/InfoSystemModel"
  /api/v1/systems/{shortName}/issues:
    get:
      tags:
      - "Issues"
      summary: "List all issues of information system"
      description: ""
      operationId: "listInfoSystemIssues"
      parameters:
      - name: "shortName"
        in: "path"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "page number"
        required: false
        type: "integer"
      - name: "size"
        in: "query"
        description: "page size"
        required: false
        type: "integer"
      - name: "filter"
        in: "query"
        description: "filter options"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "sorting options"
        required: false
        type: "string"
      - name: "fields"
        in: "query"
        description: "field list"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PagedResponseIssue"
    post:
      tags:
      - "Issues"
      summary: "Create new issue for information system"
      description: ""
      operationId: "createInfoSystemIssue"
      parameters:
      - name: "shortName"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/Issue"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Issue"
  /api/v1/user:
    get:
      tags:
      - "Users"
      summary: "Retrieves user details"
      description: ""
      operationId: "getUserDetails"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserDetailsModel"
  /api/v1/user/organization:
    put:
      tags:
      - "Users"
      summary: "Change active organization of the current user"
      description: ""
      operationId: "changeActiveOrganization"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  InfoSystemModel:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      details:
        type: "string"
  Issue:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      infoSystemUuid:
        type: "string"
        format: "uuid"
      dateCreated:
        type: "string"
        format: "date-time"
      title:
        type: "string"
      comment:
        type: "string"
      authorName:
        type: "string"
      authorPersonalCode:
        type: "string"
      organizationName:
        type: "string"
      organizationCode:
        type: "string"
      status:
        type: "string"
        enum:
        - "OPEN"
        - "CLOSED"
      entityType:
        type: "string"
        enum:
        - "ISSUE"
        - "ISSUE_COMMENT"
        - "ISSUE_EVENT"
  IssueComment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      issueId:
        type: "integer"
        format: "int64"
      comment:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      authorName:
        type: "string"
      authorPersonalCode:
        type: "string"
      organizationName:
        type: "string"
      organizationCode:
        type: "string"
      entityType:
        type: "string"
        enum:
        - "ISSUE"
        - "ISSUE_COMMENT"
        - "ISSUE_EVENT"
  IssueEntity:
    type: "object"
    properties:
      entityType:
        type: "string"
        enum:
        - "ISSUE"
        - "ISSUE_COMMENT"
        - "ISSUE_EVENT"
  OrganizationModel:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
  PagedResponse:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int64"
      content:
        type: "array"
        items:
          type: "object"
      size:
        type: "integer"
        format: "int32"
      page:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
  PagedResponseIssue:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int64"
      content:
        type: "array"
        items:
          $ref: "#/definitions/Issue"
      size:
        type: "integer"
        format: "int32"
      page:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
  PagedResponseIssueComment:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int64"
      content:
        type: "array"
        items:
          $ref: "#/definitions/IssueComment"
      size:
        type: "integer"
        format: "int32"
      page:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
  PagedResponseIssueEntity:
    type: "object"
    properties:
      totalElements:
        type: "integer"
        format: "int64"
      content:
        type: "array"
        items:
          $ref: "#/definitions/IssueEntity"
      size:
        type: "integer"
        format: "int32"
      page:
        type: "integer"
        format: "int32"
      totalPages:
        type: "integer"
        format: "int32"
  UserDetailsModel:
    type: "object"
    properties:
      personalCode:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      organizations:
        type: "array"
        items:
          $ref: "#/definitions/OrganizationModel"
      activeOrganization:
        $ref: "#/definitions/OrganizationModel"
      roles:
        type: "array"
        items:
          type: "string"
